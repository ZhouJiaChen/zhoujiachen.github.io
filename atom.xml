<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.z-xx.top</id>
    <title>风间的blog</title>
    <updated>2020-12-19T15:33:32.749Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.z-xx.top"/>
    <link rel="self" href="https://blog.z-xx.top/atom.xml"/>
    <subtitle>从零开始的打怪升级之路</subtitle>
    <logo>https://blog.z-xx.top/images/avatar.png</logo>
    <icon>https://blog.z-xx.top/favicon.ico</icon>
    <rights>All rights reserved 2020, 风间的blog</rights>
    <entry>
        <title type="html"><![CDATA[聊聊 Spring 容器]]></title>
        <id>https://blog.z-xx.top/post/3Ozaj6syu/</id>
        <link href="https://blog.z-xx.top/post/3Ozaj6syu/">
        </link>
        <updated>2020-12-19T14:08:22.000Z</updated>
        <summary type="html"><![CDATA[<p>不得不说，作为一个 curd 程序员，离开了 Spring 的容器，还能不能好好干活是个大问题。<br>
说到 Spring 容器，就不得不提 Spring IOC（哈哈，貌似应该反过来说）。</p>
]]></summary>
        <content type="html"><![CDATA[<p>不得不说，作为一个 curd 程序员，离开了 Spring 的容器，还能不能好好干活是个大问题。<br>
说到 Spring 容器，就不得不提 Spring IOC（哈哈，貌似应该反过来说）。</p>
<!-- more -->
<p>先看下 Spring 容器启动的大致流程。</p>
<ol>
<li>首先，Spring 会通过注册 6 个必须的 <code>RootBeanDefinition</code>，主要是一些 <code>PostProcessor</code>。</li>
<li>接下来会对初始化 Property Source 和 验证一些必须的属性。</li>
<li>然后是准备这个容器中需要用到的 beanFactory。</li>
<li>紧接着调用了 beanFactory 中 postProcessor。</li>
<li>接着注册 Bean 的 postProcessor。</li>
<li>initMessageSource 处理国际化相关。</li>
<li>初始化当前容器的事件监听广播器。</li>
<li>接着向广播器注册监听器。</li>
<li>然后就是最关键的实例化对象和设置属性相关的操作。</li>
<li>最后发布 <code>ContextRefreshedEvent</code> 通知完成容器刷新。</li>
</ol>
<p>还是直接上图把，主要涉及到 <code>AbstractApplicationContext</code> 下的 <code>refresh()</code><br>
<a href="https://imgchr.com/i/rU1tw4"><img src="https://s3.ax1x.com/2020/12/19/rU1tw4.md.png" alt="Spring 容器启动" loading="lazy"></a></p>
<h2 id="从-spring-容器启动开始">从 Spring 容器启动开始</h2>
<p>以 <code>AnnotationConfigApplicationContext</code> 为例</p>
<p>通过以下来创建 Application 容器</p>
<pre><code class="language-java">	@Test
	void contextLifeCycle() {
		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(Config.class);
		context.getBean(&quot;testBean&quot;);
	}
</code></pre>
<pre><code class="language-java">	/**
	 * Create a new AnnotationConfigApplicationContext, deriving bean definitions
	 * from the given component classes and automatically refreshing the context.
	 * @param componentClasses one or more component classes &amp;mdash; for example,
	 * {@link Configuration @Configuration} classes
	 */
	public AnnotationConfigApplicationContext(Class&lt;?&gt;... componentClasses) {
		this();
		register(componentClasses);
		refresh();
	}
</code></pre>
<h3 id="this">this()</h3>
<p>在 <code>this()</code> 中，注入了 6 个 RootBeanDefinition</p>
<ul>
<li>ConfigurationClassPostProcessor 用于处理 @Configuration 注解的类。</li>
<li>AutowiredAnnotationBeanPostProcessor 处理 @Autowired 注解的类。</li>
<li>CommonAnnotationBeanPostProcessor 处理 @Resource 等 JSR-250 定义的相关注解注解的类。</li>
<li>PersistenceAnnotationBeanPostProcessor JPA 相关。</li>
<li>EventListenerMethodProcessor  注册 EventListener 相关。</li>
<li>DefaultEventListenerFactory</li>
</ul>
<p>这些 <code>RootBeanDefinition</code> 是一些 <code>BeanFactoryPostProcessor</code></p>
<h3 id="refresh">refresh()</h3>
<p>然后进入到最重要的 <code>refresh()</code> 方法。<br>
// To-Do</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[迫于成年人的烦恼]]></title>
        <id>https://blog.z-xx.top/post/GF5cWjWHN/</id>
        <link href="https://blog.z-xx.top/post/GF5cWjWHN/">
        </link>
        <updated>2020-12-19T13:43:15.000Z</updated>
        <content type="html"><![CDATA[<p>昨天过完了第 26 个生日，想想离‘退休’年龄差的也不是很多了。从毕业到现在，在同一家公司已经工作了快 4 个年头了，也完成了很多人生中的大事。是时候脱离自己的舒适区，摆脱现在的困状。</p>
<p><a href="https://imgchr.com/i/rUm2RS"><img src="https://s3.ax1x.com/2020/12/19/rUm2RS.md.jpg" alt="rUm2RS.md.jpg" loading="lazy"></a><br>
补上一张生日🎂的照片，哈哈哈哈，朴素的不行的蛋糕。</p>
<p>最近又重启了找工作的计划，但是很多知识点在复习的时候记得很清楚，和别人说的时候却又很难表达完整。所以重新开启这个开启了好几次也没什么内容的 blog， 来做一些笔记。<br>
以上，希望能够一直更新。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Level.1 - 开发环境]]></title>
        <id>https://blog.z-xx.top/post/0pu9Mlq6_/</id>
        <link href="https://blog.z-xx.top/post/0pu9Mlq6_/">
        </link>
        <updated>2020-02-25T06:36:55.000Z</updated>
        <summary type="html"><![CDATA[<p><em>工欲善其事，必先利其器。</em></p>
]]></summary>
        <content type="html"><![CDATA[<p><em>工欲善其事，必先利其器。</em></p>
<!-- more -->
<h2 id="一-软件篇">一、软件篇</h2>
<p><a href="https://www.jetbrains.com/idea/">IDEA</a><br>
现代化的开发工具，可以提高开发效率😉。</p>
<p><a href="https://iterm2.com/">Iterm2</a><br>
替代系统自带的Terminal，也可以考虑使用Hyper。</p>
<p><a href="https://code.visualstudio.com/">Visual Studio Code</a><br>
巨硬出品，代替sublime处理一些文本。</p>
<p><a href="https://www.docker.com/">Docker</a><br>
随时随地跑个服务。</p>
<p><a href="https://www.sourcetreeapp.com/">Sourcetree</a><br>
偶尔也想看看自己提交的graph🤡，或者考虑<a href="https://git-fork.com/">fork</a></p>
<p><a href="https://tableplus.com/">TablePlus</a><br>
一个简洁的数据库客户端，mysql可以选择<a href="http://www.sequelpro.com/">Sequel Pro</a></p>
<p><a href="https://paw.cloud/">Paw</a><br>
替代品<a href="https://www.postman.com/">Postman</a></p>
<p><a href="https://pasteapp.io/">Paste</a><br>
剪贴板管理，真的好用👍</p>
<p><a href="https://manytricks.com/moom/">Moom</a><br>
窗口管理</p>
<p><a href="https://todo.microsoft.com/">Microsoft To Do</a><br>
巨硬大法好</p>
<p><a href="https://marktext.app/">Mark Text</a><br>
markdown编辑器</p>
<p><a href="https://gridea.dev/">Gridea</a><br>
一个静态博客的客户端</p>
<p><a href="https://github.com/onmyway133/FinderGo">FinderGo</a><br>
快速打开terminal到当前目录</p>
<p><a href="https://www.alfredapp.com/">Alfred 4</a><br>
免费的功能已经很好用了，有需求可以买个Powerpack</p>
<p><a href="https://kapeli.com/dash">Dash</a><br>
遇到不会的，翻翻文档</p>
<p><a href="https://pqrs.org/osx/karabiner/">Karabiner</a><br>
如果你有把外置键盘压在Macbook键盘上的坏习惯，你可以使用此软件把Macbook的键盘禁用。当然，还有改键和更多其他强大的功能。</p>
<p><a href="https://apps.apple.com/cn/app/the-unarchiver/id425424353?mt=12">The Unarchiver</a><br>
MacPaw出品，OSX平台好用到不行的压缩软件。</p>
<p><a href="https://www.folivora.ai/">BetterTouchTool</a><br>
没有Trackpad用户的福音，增强你的鼠标操作。</p>
<h2 id="二-终端篇">二、终端篇</h2>
<p><strong>zsh</strong></p>
<pre><code class="language-bash">chsh -s /bin/zsh
</code></pre>
<p><strong><a href="https://ohmyz.sh/">oh-my-zsh</a></strong></p>
<pre><code class="language-bash">sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;
</code></pre>
<p><strong><a href="https://brew.sh/">Homebrew</a></strong><br>
<em>需要安装Command Line Tools，安装过程中会提示下载</em></p>
<pre><code class="language-bash">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;
</code></pre>
<p><strong><a href="https://sdkman.io/">sdkman</a></strong></p>
<pre><code class="language-bash">curl -s &quot;https://get.sdkman.io&quot; | bash
</code></pre>
<p><strong><a href="https://github.com/petervanderdoes/gitflow-avh">git-flow-avh</a></strong><br>
推荐使用homebrew安装。<a href="https://www.atlassian.com/git/tutorials/comparing-workflows#!workflow-gitflow">gitflow相关文档</a></p>
<p><strong><a href="https://github.com/commitizen/cz-cli">cz-cli</a></strong><br>
格式化commit message，<a href="https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits">AngularJS 建议的提交格式</a></p>
<h2 id="三-idea插件">三、IDEA插件</h2>
<p><a href="https://plugins.jetbrains.com/plugin/4230-bashsupport">bashsupport</a></p>
<p><a href="https://plugins.jetbrains.com/plugin/8321-free-mybatis-plugin">free-mybatis-plugin</a></p>
<p><a href="http://cplugins.jetbrains.com/plugin/7495--ignore/">ignore</a></p>
<p><a href="https://plugins.jetbrains.com/plugin/7125-grep-console">grep-console</a></p>
<p><a href="https://plugins.jetbrains.com/plugin/7179-maven-helper">maven-helper</a></p>
<p><a href="https://plugins.jetbrains.com/plugin/6317-lombok">lombok</a></p>
<p><a href="https://plugins.jetbrains.com/plugin/10292-restfultoolkit">restfultoolkit</a><br>
获取当前项目Controller的所有mapping</p>
]]></content>
    </entry>
</feed>